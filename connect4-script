#! /bin/bash

# Solve connect-4 using a combination of a C++ program ('connect4') and the
# standard 'sort' tool.

set -e

# Check that TMDIR is set. It is used by 'sort' to know where to put temporary files.
# Note that these can be large, and there can be many of them!
# Ideally, TMPDIR should point to a different disk than the one where data is being
# read from / written to.

if [ -z "$TMPDIR" ] ; then
    echo "Please set the environment variable TMPDIR for 'sort'."
    exit 1
fi

# Make the sort tool stupid (sort by byte order).
#
# The man page of sort says:
#
#     *** WARNING *** The locale specified by the environment affects sort order.
#     Set LC_ALL=C to get the traditional sort order that uses native byte values.

export LC_ALL=C

# Add the current directory to the PATH, so we can find the 'connect4' executable.

CONNECT4=$PWD/connect4

if [ ! -x "$CONNECT4" ] ; then
    echo "The 'connect4' executable is not available. Use 'make' to create it."
    exit 1
fi

# Get the size of the board we're processing.

let H_SIZE=`$CONNECT4 --horizontal-board-size`
let V_SIZE=`$CONNECT4 --vertical-board-size`
let Q_VALUE=`$CONNECT4 --win-connect-count`

let MAX_GEN=H_SIZE*V_SIZE

# Forward stage: expand game tree starting at the initial (empty) board.

echo "Preparing forward traversal ..."

# Write the initial node.

$CONNECT4 --make-initial-node nodes_0.dat
wc -l nodes_0.dat > nodes.log

# Forward stage: generate all nodes.

for ((curr=0; curr <= MAX_GEN - 1; ++curr)) do
    let next=curr+1
    echo "  forward: $curr -> $next"
    $CONNECT4 --make-nodes nodes_$curr.dat STDOUT | sort -u > nodes_$next.dat
    wc -l nodes_$next.dat >> nodes.log
done

# Backward stage: propagate finalized node evaluations backwards.

echo "Preparing backward traversal ..."

# The last nodes file is already fully correct w.r.t. scores.
mv nodes_$((MAX_GEN)).dat nodes_with_score_$((MAX_GEN)).dat

for ((curr=MAX_GEN - 1; curr >= 0; --curr)) do
    let next=curr+1
    echo "  backward: $next -> $curr"
    $CONNECT4 --make-edges nodes_$curr.dat STDOUT | sort |
      $CONNECT4 --make-edges-with-score STDIN nodes_with_score_$next.dat STDOUT | sort -u |
        $CONNECT4 --make-nodes-with-score nodes_$curr.dat STDIN nodes_with_score_$curr.dat
    rm nodes_$curr.dat
done

# Merge-sort the nodes_with_score files together.

echo "Merging all nodes_with_score files ..."

sort -m nodes_with_score_*.dat > connect4_v${V_SIZE}h${H_SIZE}q${Q_VALUE}.dat

echo "Converting to binary ..."

$CONNECT4 --make-binary-file connect4_v${V_SIZE}h${H_SIZE}q${Q_VALUE}.dat connect4_v${V_SIZE}h${H_SIZE}q${Q_VALUE}.bin

echo "Compressing binary file ..."

xz --keep --force connect4_v${V_SIZE}h${H_SIZE}q${Q_VALUE}.bin
